[{"C:\\Users\\Elias\\react-firechat\\src\\index.js":"1","C:\\Users\\Elias\\react-firechat\\src\\App.js":"2","C:\\Users\\Elias\\react-firechat\\src\\hooks.js":"3","C:\\Users\\Elias\\react-firechat\\src\\components\\Loader.js":"4","C:\\Users\\Elias\\react-firechat\\src\\components\\Channel.js":"5","C:\\Users\\Elias\\react-firechat\\src\\components\\Message.js":"6"},{"size":219,"mtime":1611565922000,"results":"7","hashOfConfig":"8"},{"size":6991,"mtime":1619849558274,"results":"9","hashOfConfig":"8"},{"size":4739,"mtime":1611565922000,"results":"10","hashOfConfig":"8"},{"size":750,"mtime":1611565922000,"results":"11","hashOfConfig":"8"},{"size":2488,"mtime":1619885264885,"results":"12","hashOfConfig":"8"},{"size":2042,"mtime":1619899214550,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lx6xe2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Elias\\react-firechat\\src\\index.js",[],["29","30"],"C:\\Users\\Elias\\react-firechat\\src\\App.js",[],"C:\\Users\\Elias\\react-firechat\\src\\hooks.js",[],"C:\\Users\\Elias\\react-firechat\\src\\components\\Loader.js",[],"C:\\Users\\Elias\\react-firechat\\src\\components\\Channel.js",["31","32"],"import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport { useFirestoreQuery } from '../hooks';\n// Components\nimport Message from './Message';\n\nconst Channel = ({ user = null }) => {\n  const db = firebase.firestore();\n  const messagesRef = db.collection('messages');\n  const messages = useFirestoreQuery(\n    messagesRef.orderBy('createdAt', 'desc').limit(100)\n  );\n\n  const [newMessage, setNewMessage] = useState('');\n\n  const inputRef = useRef();\n  const bottomListRef = useRef();\n\n  const { uid, displayName, photoURL } = user;\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  const handleOnChange = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    const trimmedMessage = newMessage.trim();\n    if (trimmedMessage) {\n      // Add new message in Firestore\n      messagesRef.add({\n        text: trimmedMessage,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        displayName,\n        photoURL,\n      });\n      // Clear input field\n      setNewMessage('');\n      // Scroll down to the bottom of the list\n      bottomListRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"overflow-auto h-full\">\n        <div className=\"py-4 max-w-screen-lg mx-auto\">\n          <div className=\"border-b dark:border-gray-600 border-gray-200 py-8 mb-4\">\n            <div className=\"font-bold text-3xl text-center\">\n              <p className=\"mb-1\"></p>\n              <p className=\"mb-3\"></p>\n            </div>\n            <p className=\"text-gray-400 text-center\">\n              Esse é o início do histórico\n            </p>\n          </div>\n          <ul>\n            {messages\n              ?.sort((first, second) =>\n                first?.createdAt?.seconds <= second?.createdAt?.seconds ? -1 : 1\n              )\n              ?.map(message => (\n                <li key={message.id}>\n                  <Message {...message} />\n                </li>\n              ))}\n          </ul>\n          <div/>\n        </div>\n      </div>\n      <div className=\"mb-6 mx-4\">\n  \n      </div>\n    </div>\n  );\n};\n\nChannel.propTypes = {\n  user: PropTypes.shape({\n    uid: PropTypes.string,\n    displayName: PropTypes.string,\n    photoURL: PropTypes.string,\n  }),\n};\n\nexport default Channel;\n","C:\\Users\\Elias\\react-firechat\\src\\components\\Message.js",["33","34"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatRelative } from 'date-fns';\nimport { pt } from 'date-fns/locale';\nvar resultado = \"\";\nconst formatDate = date => {\n  let formattedDate = '';\n  if (date) {\n    // Convert the date in words relative to the current date\n    formattedDate = formatRelative(date, new Date(),{locale: pt});\n    // Uppercase the first letter\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n  return formattedDate;\n};\n\nconst Message = ({\n  createdAt = null,\n  text = '',\n  displayName = '',\n  photoURL = '',\n \n}) => {\n  if (!text) return null;\n  {resultado = text.split(/\\s*;\\s*/)}\n  return (\n    <div className=\"px-4 py-4 rounded-md hover:bg-gray-50 dark:hover:bg-coolDark-600 overflow-hidden flex items-start\">\n      {photoURL ? (\n        <img\n          src={photoURL}\n          alt=\"Avatar\"\n          className=\"rounded-full mr-4\"\n          width={45}\n          height={45}\n        />\n      ) : null}\n      <div>\n        <div className=\"flex items-center mb-1\">\n          {displayName ? (\n            <p className=\"mr-2 text-primary-500\">{displayName}</p>\n          ) : null}\n          {createdAt?.seconds ? (\n            <span className=\"text-gray-500 text-xs\">\n              {formatDate(new Date(createdAt.seconds * 1000))}\n           </span>\n          ) : null}\n        </div>\n      \n        <p>{resultado[0]}</p>\n        <h1> --</h1>\n        <strong>Localização Atual:</strong>\n        <p>Latitude: {resultado[1]} </p>\n        <p>Longitude: {resultado[2]}  </p>\n        <h1> --</h1>\n       <font color=\"blue\">\n       <p><a href={'https://www.google.com/maps/?q=' +  resultado[1] + resultado[2]} target=\"_blank\" title=\"Abrir em nova janela\">  <b>ABRIR A LOCALIZAÇÃO</b></a></p>\n       </font> \n      </div>\n   </div>\n  );\n};\n\nMessage.propTypes = {\n  text: PropTypes.string,\n  createdAt: PropTypes.shape({\n    seconds: PropTypes.number,\n  }),\n  displayName: PropTypes.string,\n  photoURL: PropTypes.string,\n};\n\nexport default Message;\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":28,"column":9,"nodeType":"41","messageId":"42","endLine":28,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":32,"column":9,"nodeType":"41","messageId":"42","endLine":32,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":26,"column":3,"nodeType":"46","messageId":"47","endLine":26,"endColumn":38},{"ruleId":"48","severity":1,"message":"49","line":57,"column":11,"nodeType":"50","endLine":57,"endColumn":131},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'handleOnChange' is assigned a value but never used.","Identifier","unusedVar","'handleOnSubmit' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]